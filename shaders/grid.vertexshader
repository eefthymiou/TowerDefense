#version 330 core

// input vertex and UV coordinates, different for all executions of this shader
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec2 vertexUV;

// Output data ; will be interpolated for each fragment.
out vec2 UV;

// model view projection matrix 
uniform mat4 MVP;
uniform vec3 offsets[100];

void main()
{
    vec3 offset = offsets[gl_InstanceID];
    gl_Position = MVP * vec4(vertexPosition_modelspace + offset, 1.0);
    UV = vertexUV;
}  